{"version":3,"sources":["components/services/login/Login.js","components/graphic interface/MisRutas.js","components/graphic interface/MyFriends.js","components/graphic interface/NavBar.js","components/containers/welcome/Welcome.js","components/containers/pagenotfound/PageNotFound.js","components/services/register/Register.js","components/map/MapSnapshot.js","components/graphic interface/MyRouteCard.js","entities/RouteElement.js","entities/Media.js","entities/Route.js","parser/ParserJsonLdToRoute.js","entities/GroupOfFriends.js","parser/ParserJsonLdToGroupOfFriends.js","parser/PodHandler.js","parser/RouteHandler.js","cache/RoutesChache.js","components/graphic interface/ListUserRoutes.js","components/containers/routes/UserRoutes.js","components/graphic interface/ElevationGraph.js","components/map/DetailsMap.js","components/graphic interface/CommentsCard.js","components/graphic interface/ImgCarrusel.js","components/graphic interface/MediaTabBar.js","components/graphic interface/RouteDetailsCard.js","components/containers/routes/RouteDetails.js","components/containers/stepper/dataform/DataForm.js","components/containers/stepper/reviewform/ReviewForm.js","components/map/EditableMap.js","components/containers/stepper/mapform/MapForm.js","components/containers/stepper/success/SuccessForm.js","components/containers/newrouteform/NewRouteForm.js","components/graphic interface/FriendsCard.js","components/containers/createGroupOfFriends/CreateGroupForm.js","components/containers/Routes.js","App.js","index.js","assets/img/logo/logo1.svg"],"names":["auth","require","Login","currentSession","session","popupLogin","popupUri","webId","logout","LoggedOut","Button","variant","color","onClick","LoggedIn","React","Component","MisRutas","useState","open","setOpen","anchorRef","useRef","data-testid","ref","aria-controls","undefined","aria-haspopup","prevOpen","Popper","anchorEl","current","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","MenuList","MenuItem","window","location","href","ListItemIcon","Typography","MyFriends","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","fontSize","letterSpacing","paper","menu","width","NavBar","classes","className","AppBar","position","Toolbar","Link","underline","src","logo1","alt","height","Welcome","Grid","container","direction","alignItems","justify","marginTop","item","xs","marginBottom","align","Divider","PageNotFound","marginLeft","minWidth","margin","display","flexDirection","avatar","backgroundColor","palette","warning","main","form","justifyContent","submit","link","Register","Container","component","maxWidth","Card","elevation","CssBaseline","Avatar","fullWidth","startIcon","MapSnapshot","points","props","route","getRouteElements","map","point","getLatitude","getLongitude","setPopup","Map","bounds","this","doubleClickZoom","dragging","keyboard","scrollWheelZoom","tap","touchZoom","zoomControl","boxZoom","TileLayer","url","Polyline","positions","background","pos","MyRouteCard","CardContent","getId","getName","getDate","toDateString","sm","Math","round","getTotalDistance","RouteElement","latitude","longitude","name","noSpaces","text","replace","Media","id","routeName","newid","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","a","sin","cos","atan2","sqrt","deg","PI","Route","description","routeElements","comments","media","date","uuid","toString","totalDistance","forEach","p","push","lat","lng","generateRouteElements","m","time","total","i","length","aux","routeElement","routePointsJson","toJsonLatLng","mediaJson","toJsonMedia","JSON","stringify","author","ParserJsonLdToRoute","file","parse","element","parsePoints","Date","GroupOfFriends","friends","getJsonLD","podHandler","storeGroup","friendsUrl","f","getFriendsJsonLD","ParserJsonLdToGroupOfFriends","group","users","parseFriends","fc","parser","parseGroups","mediaType","image","video","validMediaType","mediaList","valid","test","PodHandler","pod","split","viadeFolder","defaultFolder","routesFolder","resourcesFolder","commentsFolder","addressBook","fileName","routeJson","callback","storeFile","data","createFile","then","response","error","routename","Promise","reject","buildPath","Array","from","groups","itemExists","readFolder","contents","files","console","log","routes","readFile","fileContent","uploadMedia","storageHandler","storeMedia","urlInPod","alertText","alert","getMedia","storeRoute","status","loadAllRoutes","loadedRoutes","findAllRoutes","selected","addRouteToCache","find","obj","getRoutesFromPod","getRoutesFromCache","clear","ListUserRoutes","state","cache","size","index","each","UserRoutes","getChartData","getArrayDistances","getElevation","x","y","isShown","ElevationGraph","show","animate","duration","onLoad","colorScale","fill","DetailsMap","zoom","attribution","Marker","Popup","CommentsCard","GridList","gridList","cols","getComments","comment","AutoPlaySwipeableViews","autoPlay","SwipeableViews","header","paddingLeft","default","img","overflow","ImgCarrusel","useTheme","activeStep","setActiveStep","maxSteps","square","axis","onChangeIndex","step","enableMouseEvents","key","abs","MobileStepper","steps","nextButton","prevActiveStep","disabled","backButton","MediaTabBar","value","setValue","Tabs","onChange","event","newValue","Tab","label","role","hidden","RouteDetails","getDescription","useParams","myroute","filter","r","DataForm","handleDateChange","next","e","preventDefault","handleNext","handleMediaChange","selectorFiles","code","values","handleChange","Fragment","gutterBottom","onSubmit","TextField","required","defaultValue","autoComplete","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","multiline","rows","accept","multiple","photos","type","target","htmlFor","videos","FormHelperText","ReviewForm","createRoute","back","handleBack","pointsText","getUTCMonth","getUTCDate","getUTCFullYear","getPointsText","EditableMap","addPoint","latlng","setState","slice","firstPoint","openNotif","updatePoint","options","marker_index","getLatLng","removePoint","splice","center","draggable","ondrag","onclick","provider","Alert","MapForm","getTrackPoints","handleMapPoints","newSeverity","message","severity","closeNotif","createRef","vertical","horizontal","Snackbar","anchorOrigin","action","IconButton","aria-label","onClose","SuccessForm","download","handleDownload","Tooltip","arrow","NewRouteForm","input","newDate","newPoints","fileData","blob","Blob","URL","createObjectURL","document","createElement","click","upload","checkSuccessCode","resolve","uploadRoute","Error","layout","Stepper","stepper","Step","StepLabel","getStepContent","withStyles","breakpoints","up","padding","buttons","button","icon","grid","CreateGroupForm","formControl","changeName","makeGroup","storeInPod","childrenTrimmed","showFriends","friend","ListItem","dense","Checkbox","edge","tabIndex","disableRipple","ListItemText","primary","noValidate","Routes","exact","path","to","App","getRoutes","Helmet","createMuiTheme","teal","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9fd4cbc3.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { LoggedIn, LoggedOut } from '@solid/react';\n\nconst auth = require('solid-auth-client');\n\nexport class Login extends React.Component {\n\n    async popupLogin(auth) {\n        let session = await auth.currentSession();\n        let popupUri = 'https://solid.community/common/popup.html';\n        if (!session) {\n            session = await auth.popupLogin({ popupUri });\n        }\n\n        // if(session){\n        //     UsersManager.createUserAndLoadRoutes(`${session.webId}`);\n        // }\n        return (`${session.webId}`); // example of getting user's name. returns something like: \"https://pablocanalsuarez.solid.community/profile/card#me\"\n    };\n\n    logout(auth) {\n        auth.logout();\n    }\n\n    render() {\n        return (\n            <div>\n                <LoggedOut>\n                    <Button variant=\"outlined\" color=\"inherit\" onClick={() => this.popupLogin(auth)}>Sign in</Button>\n                </LoggedOut>\n                <LoggedIn>\n                    <Button variant=\"outlined\" color=\"inherit\" onClick={() => this.logout(auth)}>Sign out</Button>\n                </LoggedIn>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { MenuItem, Paper, Popper, Grow, MenuList, ListItemIcon, Typography } from '@material-ui/core';\nimport ListIcon from '@material-ui/icons/List';\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\n\nconst MisRutas = () => {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    return (\n        <div>\n            <Button\n                data-testid=\"routes\" \n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"inherit\"\n            >\n                My Routes\n            </Button>\n            <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper >\n                            <MenuList >\n\n                                <MenuItem data-testid=\"seeRoutes\"  onClick={() => window.location.href='#/myroutes'}>\n                                    <ListItemIcon>\n                                        <ListIcon />\n                                    </ListItemIcon>\n                                    <Typography>See routes</Typography>\n                                </MenuItem>\n\n                                <MenuItem data-testid=\"createRoutes\"  onClick={() =>  window.location.href='#/newRoute'}>\n                                    <ListItemIcon>\n                                        <EditLocationIcon />\n                                    </ListItemIcon>\n                                    <Typography>Create new</Typography>\n                                </MenuItem>\n\n                            </MenuList>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </div>\n    );\n};\n\nexport default MisRutas;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { MenuItem, Paper, Popper, Grow, MenuList, ListItemIcon, Typography } from '@material-ui/core';\nimport ListIcon from '@material-ui/icons/PeopleAlt';\nimport AddGroupIcon from '@material-ui/icons/GroupAdd';\n\nconst MyFriends = () => {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    return (\n        <div>\n            <Button\n                data-testid=\"btn\"\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"inherit\"\n            >\n                My Friends\n            </Button>\n            <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper >\n                            <MenuList >\n\n                                <MenuItem data-testid=\"btnSee\" onClick={() => window.location.href='#/seeFriends'}>\n                                    <ListItemIcon>\n                                        <ListIcon />\n                                    </ListItemIcon>\n                                    <Typography>See Friends</Typography>\n                                </MenuItem>\n\n                                <MenuItem data-testid=\"btnGrp\" onClick={() =>  window.location.href='#/newGroup'}>\n                                    <ListItemIcon>\n                                        <AddGroupIcon />\n                                    </ListItemIcon>\n                                    <Typography>Create Group of Friends</Typography>\n                                </MenuItem>\n\n                            </MenuList>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </div>\n    );\n};\n\nexport default MyFriends;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Login from \"../services/login/Login.js\";\nimport { LoggedOut, LoggedIn } from '@solid/react';\nimport { Link } from '@material-ui/core';\nimport \"typeface-roboto\";\nimport MisRutas from './MisRutas.js';\nimport MyFriends from './MyFriends.js'\nimport logo1 from '../../assets/img/logo/logo1.svg';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst NavBar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar >\n          <Link underline='none' color='inherit' href={'#/welcome'} className={classes.title}>\n            <img src={logo1} alt=\"Viade Logo\" style={{ height: '3vh', width: '3vh' }} /> Viade\n          </Link>\n\n          <LoggedIn>\n            <MisRutas />\n            <MyFriends />\n            </LoggedIn>\n          <LoggedOut><Button className={classes.menuButton} href={\"#/register\"} color=\"inherit\">Sign up</Button></LoggedOut>\n          <Login />\n          <Button>\n            <GitHubIcon style={{ color: \"FFFFFF\" }} fontSize=\"large\"\n              onClick={() => window.location.href='https://github.com/Arquisoft/viade_en3b'}>\n            </GitHubIcon>\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: 20,\n    letterSpacing: 1,\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  menu: {\n    width: 150,\n  }\n}));\n\nexport default NavBar;","import React from 'react';\nimport NavBar from '../../graphic interface/NavBar.js';\nimport { Typography, Grid, Divider } from '@material-ui/core';\nimport 'typeface-roboto';\nimport logo1 from '../../../assets/img/logo/logo1.svg';\n\nconst Welcome = () => {\n\n    return (\n        <div>\n            <NavBar />\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{ marginTop: '30vh' }}\n            >\n                <Grid item xs={3} style={{marginBottom: '2vh'}}>\n                    <img src={logo1} alt=\"Viade Logo\" style={{ height: '10vh', width: '10vh' }} data-testid=\"logo\"/>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Typography style={{ marginBottom: '10px' }} variant=\"h4\" color=\"inherit\" align=\"center\" data-testid=\"welcome\">Welcome to Viade.</Typography>\n                    <Divider />\n                    <Typography style={{ marginTop: '10px' }} variant=\"body1\" color=\"inherit\" align=\"center\" data-testid=\"routes\">The first routes management system based on SOLID technology.</Typography>\n                </Grid>\n\n            </Grid>\n        </div>\n    );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport \"typeface-roboto\";\nimport { Link, Typography } from '@material-ui/core';\n\nconst PageNotFound = () => {\n    \n    return (\n        <div style={{marginLeft:'5vh', marginTop:'5vh'}}>\n            <Typography variant=\"h4\">Sorry, there's nothing to see here</Typography>\n            <p>Go back to <Link href={\"#/\"}>Home</Link></p>\n        </div>\n    );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport NavBar from '../../graphic interface/NavBar.js';\nimport Card from '@material-ui/core/Card';\nimport ContactsOutlinedIcon from '@material-ui/icons/ContactsOutlined';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n        margin: 50,\n    },\n    paper: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.warning.main,\n    },\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    submit: {\n        margin: theme.spacing(1, 0, 2),\n    },\n    link:{\n        margin: theme.spacing(1, 0, 2),\n    }\n}));\n\nexport default function Register() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <NavBar />\n            <Container component=\"main\" maxWidth=\"sm\">\n                <Card className={classes.root} elevation={4}>\n                    <CssBaseline />\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <AccountCircleIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">Hi! Welcome to Solid.</Typography>\n                        <div className={classes.form}>\n                             \n                            <Button\n                                fullWidth\n                                color=\"primary\"\n                                className={classes.link}\n                                startIcon={<EmojiPeopleIcon/>}\n                                onClick={() => window.open('https://solid.inrupt.com/how-it-works')}\n                            >How to choose a Provider?</Button>\n\n                            <Button\n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                startIcon={<ContactsOutlinedIcon/>}\n                                onClick={() => window.open('https://inrupt.net/register')}\n                            >Inrupt</Button>\n\n                            <Button\n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                startIcon={<ContactsIcon/>}\n                                onClick={() => window.open('https://solid.community/register')}\n                            >Solid Community</Button>\n\n                        </div>\n                    </div>\n                </Card>\n            </Container>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport { Map, TileLayer, Polyline } from 'react-leaflet';\n\nexport default class MapSnapshot extends Component {\n  points = this.props.route.getRouteElements().map((point) => (\n    [point.getLatitude(), point.getLongitude()]\n  ));\n\n  setPopup = () => { }\n\n  render() {\n    return (\n      <Map bounds={this.points} doubleClickZoom={false} dragging={false} keyboard={false}\n        scrollWheelZoom={false} tap={false} touchZoom={false} zoomControl={false} boxZoom={false}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={this.points} color='blue' />\n        ))}\n      </Map>\n    );\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport MapSnapshot from '../map/MapSnapshot.js'\nimport Button from '@material-ui/core/Button';\nimport { Link, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 290,\n    marginBottom: '2vh',\n    marginTop: '2vh',\n    background: '#f7f7f7'\n  },\n  pos: {\n    // marginBottom: 12,\n    // marginTop: 12,\n    color: 'black'\n  },\n  link: {\n    // marginBottom: 20,\n    // marginTop: 10,\n  },\n});\n\nexport default function MyRouteCard(props) {\n  const classes = useStyles();\n  // console.log(props.route);\n  return (\n    <Card elevation={5} className={classes.root}>\n      <CardContent>\n        <Grid container spacing={2}>\n\n          <Grid item xs={12}>\n            <MapSnapshot route={props.route}></MapSnapshot>\n          </Grid>\n\n          <Grid item xs={12} >\n            <Link underline='none' href={\"#/RouteDetails/\" + props.route.getId()}>\n              <Typography data-testid=\"name\" className={classes.link} variant=\"h5\" component=\"h2\">\n                {props.route.getName()}\n              </Typography>\n            </Link>\n          </Grid>\n          {props.route.getDate().toDateString()!=\"Invalid Date\"&&\n          <Grid item xs={12} sm={5}>\n            <Typography data-testid=\"date\"  className={classes.pos} color=\"textSecondary\">\n              {props.route.getDate().toDateString()}\n            </Typography>\n          </Grid>}\n\n          <Grid item xs={12} sm={5}>\n            <Typography data-testid=\"dtc\"  className={classes.pos} color=\"textSecondary\">\n              {Math.round(props.route.getTotalDistance()*1000)/1000} Km\n            </Typography>\n          </Grid>\n\n          <Button data-testid=\"btn\" variant='outlined'\n            // style={{ color: 'white', background: 'black' }} \n            href={\"#/RouteDetails/\" + props.route.getId()}\n            color=\"inherit\"\n            style={{marginLeft:'auto', marginRight:'auto'}}>\n            Details\n          </Button>\n\n        </Grid>\n      </CardContent>\n    </Card >\n  );\n}","class RouteElement {\n    constructor(latitude, longitude, elevation) {\n\n        this.latitude = latitude;\n        this.longitude = longitude;\n        if(elevation==undefined){\n            this.elevation = 0;\n        }\n        else{\n            this.elevation = elevation;\n        }\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getLatitude() {\n        return this.latitude;\n    }\n\n    getElevation() {\n        return this.elevation;\n    }\n\n    getLongitude() {\n        return this.longitude;\n    }\n\n    toJsonLatLng() {\n        return {\n            \"latitude\": this.latitude,\n            \"longitude\": this.longitude,\n            \"elevation\":this.elevation,\n        };\n    }\n}\n\nexport default RouteElement;","class Media{\n    constructor(id,name){\n        this.id=id;\n        this.name=name;\n    }\n\n    toJsonMedia(routeName) {\n        let newid = \"viade/resources/\" +noSpaces(routeName) + \"3%40\" + noSpaces(this.id)+\".jsonld\";\n        this.id = newid;\n        return {\n            \"@id\": newid,\n            \"name\": this.name,\n        };\n    }\n}\n\nfunction noSpaces(text){\n    let regex = / /gi;\n    return text.replace(regex, '%20')\n}\n\nexport default Media;","import { v4 as uuid } from \"uuid\";\nimport RouteElement from \"./RouteElement\";\nimport Media from \"./Media\";\n\nclass Route {\n\n    /**\n     * Constructor for a new Route. \n     * An id will be automatically generated (uuid v4).\n     * TotalDistance will also be automatically generated.\n     * \n     * RouteElements have name, latitude, longitude and elevation.\n     * \n     * @param {String} name Name of the route.\n     * @param {Date} date Date of the route.\n     * @param {String} description Description of the route.\n     * @param {Array} routeElements List of RouteElement objects, which are the trackpoints.\n     * @param {Array} comments List of comments\n     * @param {Array<String>} media List of urls of media (on the POD)\n     */\n    constructor(name, description, routeElements, comments, media, date) {\n        this.id = uuid().toString();\n        this.name = name;\n        this.date = date;\n        this.description = description;\n\n        this.media = media;\n        this.totalDistance = null;\n\n        if (comments === null) {\n            this.comments = [];\n        } else {\n            this.comments = comments;\n        }\n\n        if (routeElements[0] instanceof RouteElement) {\n            this.routeElements = routeElements;\n        } else {\n            this.routeElements = generateRouteElements(routeElements);\n        }\n        if (media[0] instanceof Media) {\n            this.media = media;\n        } else {\n            this.media = filesToMedia(media);\n        }\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getDate() {\n        return this.date;\n    }\n\n    getTime() {\n        return this.time;\n    }\n\n    getDescription() {\n        return this.description;\n    }\n\n    getRouteElements() {\n        return this.routeElements;\n    }\n\n    \n    \n    //in km\n    getTotalDistance() {\n        var total = 0;\n    \n        for (let i = 1; i < this.routeElements.length; i++) {\n            total = total + getDistanceFromLatLonInKm(this.routeElements[i-1].getLatitude(),this.routeElements[i-1].getLongitude(),\n            this.routeElements[i].getLatitude(),this.routeElements[i].getLongitude());\n        }\n    \n        return total;\n    }\n\n    addDistance(aux) {\n        if (aux < 0) {\n            return -aux;\n        } else {\n            return aux;\n        }\n    }\n\n    getComments() {\n        return this.comments;\n    }\n\n    getMedia() {\n        return this.media;\n    }\n\n    addMedia(media) {\n        this.media.push(new Media(media.id,media.name));\n    }\n\n    addRouteElement(routeElement) {\n        this.routeElements.push(routeElement);\n    }\n\n    getJsonLD() {\n        let routePointsJson = [];\n        this.routeElements.forEach((p) => routePointsJson.push(p.toJsonLatLng()));\n        let mediaJson = [];\n        this.media.forEach((m) => mediaJson.push(m.toJsonMedia(this.name)));\n        return JSON.stringify(\n            {\n                \"@context\": {\n                    \"@version\": 1.1,\n                    \"comments\": {\n                        \"@id\": \"viade:comments\",\n                        \"@type\": \"@id\"\n                    },\n                    \"description\": {\n                        \"@id\": \"schema:description\",\n                        \"@type\": \"xsd:string\"\n                    },\n                    \"media\": {\n                        \"@container\": \"@list\",\n                        \"@id\": \"viade:media\"\n                    },\n                    \"name\": {\n                        \"@id\": \"schema:name\",\n                        \"@type\": \"xsd:string\"\n                    },\n                    \"points\": {\n                        \"@container\": \"@list\",\n                        \"@id\": \"viade:points\"\n                    },\n                    \"latitude\": {\n                        \"@id\": \"schema:latitude\",\n                        \"@type\": \"xsd:double\"\n                    },\n                    \"longitude\": {\n                        \"@id\": \"schema:longitude\",\n                        \"@type\": \"xsd:double\"\n                    },\n                    \"elevation\": {\n                        \"@id\": \"schema:elevation\",\n                        \"@type\": \"xsd:double\"\n                    },\n                    \"author\":{\n                        \"@id\": \"schema:author\",\n                        \"@type\": \"@id\"\n                    },\n                    \"date\": {\n                        \"@id\": \"schema:DateTime\",\n                        \"@type\": \"xsd:dateTime\"\n                    },\n                    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n                    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n                    \"schema\": \"http://schema.org/\",\n                    \"viade\": \"http://arquisoft.github.io/viadeSpec/\",\n                    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n                },\n                \"name\": this.name,\n                \"author\": this.author,\n                \"description\": this.description,\n                \"date\": this.date.toDateString(),\n                \"comments\": this.comments,\n                \"media\": mediaJson,\n                \"points\": routePointsJson\n            }\n        );\n    }\n\n}\n\n/**\n * Method that receives a list of points and returns\n * a list of RouteElements\n * @param {Array} points List of points containing name, latitude, longitude, elevation. \n */\nfunction generateRouteElements(points) {\n    let routeElements = [];\n    points.forEach((p) => routeElements.push(new RouteElement(p.lat, p.lng)));\n    return routeElements;\n}\n\nfunction filesToMedia(files){\n    return files.map((m)=>(new Media(m.name,m.name)));\n}\n\nfunction getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\n        var R = 6371; // Radius of the earth in km\n        var dLat = deg2rad(lat2-lat1);  // deg2rad below\n        var dLon = deg2rad(lon2-lon1); \n        var a = \n          Math.sin(dLat/2) * Math.sin(dLat/2) +\n          Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n          Math.sin(dLon/2) * Math.sin(dLon/2)\n          ; \n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n        var d = R * c; // Distance in km\n        return d;\n      }\n      \n    function deg2rad(deg) {\n        return deg * (Math.PI/180)\n      }\n\nexport default Route;","import Route from '../entities/Route.js';\nimport RouteElement from '../entities/RouteElement.js';\nimport Media from \"../entities/Media.js\";\n\nclass ParserJsonLdToRoute {\n    \n    parse(file){    \n        var route = JSON.parse( file );\n\n        var name = route.name;\n        var description = route.description;\n        var date = route.date;\n        var points = route.points;\n        var comments = [];\n        var media = route.media.map(element => new Media(element[\"@id\"],element.name));\n        \n        let routeElements = this.parsePoints(points);\n\n        return new Route(name, description, routeElements, comments, media, new Date(date));\n    }\n\n    parsePoints(points) {\n        let routeElements = [];\n        for(var i = 0; i < points.length; i++ ){\n            routeElements.push(new RouteElement(points[i].latitude, points[i].longitude,points[i].elevation));\n        }\n        return routeElements;\n    }\n}\n\nexport default ParserJsonLdToRoute;","import  podHandler from '../parser/PodHandler.js';\n//import { parser } from '../../../parser/parseToTurtle';\n\nclass GroupOfFriends {\n\n    constructor(name, friends){\n\n        this.name = name;\n        this.friends = friends;\n\n    }\n\n    storeInPod(){\n\n       // var file = this.parseToTurtle();\n       var file = this.getJsonLD();\n        podHandler.storeGroup(file);\n\n    }\n\n  //  parseToTurtle(){\n\n    //    return parser.parseToTurtle(this.name, this.friends);\n        \n   // }\n\n    getName(){\n\n        return this.name;\n\n    }\n\n    getFriends(){\n\n        return this.friends;\n\n    }\n\n    getFriendsJsonLD(){\n\n        let friendsUrl = [];\n        this.friends.forEach((f) => {\n            friendsUrl.push({\n                \"url\": f\n              });\n        });\n\n    }\n\n\n    getJsonLD() {\n        return JSON.stringify(\n            {\n                \"@context\": {\n                  \"@version\": 1.1,\n                  \"users\": {\n                    \"@container\": \"@list\",\n                    \"@id\": \"schema:Person\"\n                  },\n                  \"name\": {\n                    \"@id\": \"schema:name\",\n                    \"@type\": \"xs:string\"\n                  },\n              \"url\": {\n                    \"@id\": \"schema:url\",\n                    \"@type\": \"xs:string\"\n                  },\n                    \"schema\": \"http://schema.org/\",\n                    \"viade\": \"http://arquisoft.github.io/viadeSpec/\",\n                    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n                },\n                \"name\": this.name,\n                \"users\": this.getFriendsJsonLD()\n            }\n        );\n    }\n\n}\n\nexport default GroupOfFriends;","import GroupOfFriends from \"../entities/GroupOfFriends\";\n\nclass ParserJsonLdToGroupOfFriends {\n    \n    parse(file){    \n        var group = JSON.parse( file );\n\n        var name = group.name;\n        var users = group.users;\n        \n        let friends = this.parseFriends(users);\n\n        \n        return new GroupOfFriends(name, friends);\n    }\n\n    parseFriends(users) {\n        let friends = [];\n        for(var i = 0; i < users.length; i++ ){\n            friends.push(users[i].url);\n        }\n        return friends;\n    }\n}\n\nexport default ParserJsonLdToGroupOfFriends;","import ParserJsonLdToRoute from \"./ParserJsonLdToRoute\";\n\nimport ParserJsonLdToGroupOfFriends from \"./ParserJsonLdToGroupOfFriends\";\n//import ParserGroupsInTurtle from \"./ParserGroupsInTurtle\";\nimport { findDOMNode } from \"react-dom\";\n\nconst auth = require('solid-auth-client');\nconst FC = require('solid-file-client');\nconst fc = new FC(auth);\nconst parser = new ParserJsonLdToRoute();\nconst parseGroups = new ParserJsonLdToGroupOfFriends();\n//const groupsParser = new ParserGroupsInTurtle();\n\nclass PodHandler {\n\n    constructor(session) {\n        this.session = session;\n\n        this.pod = session.webId.split(\"profile\")[0];\n        this.viadeFolder = \"viade/\";\n\n        this.defaultFolder = this.pod + this.viadeFolder;\n\n        this.routesFolder = \"routes/\";\n        this.resourcesFolder = \"resources/\"; // for photos and videos \n        this.commentsFolder = \"comments/\";\n        this.addressBook = this.pod + \"groups/\"; // for friends' groups\n    }\n\n    getRoutes\n\n    storeRoute(fileName, routeJson, callback = () => { }) {\n        let url = this.defaultFolder + this.routesFolder + fileName;\n        this.storeFile(url, routeJson, callback);\n    }\n\n    storeGroup(group){\n        let url = this.addressBook;\n        this.storeFile(url, group);\n    }\n\n    storeFile(url, data, callback) {\n        let response = fc.createFile(url, data);\n        // let successCode = null;\n        response.then(\n            (response) => { callback(0); }\n            , (error) => { callback(-1); }\n        );\n        // return successCode;\n    }\n\n    async storeMedia(mediaList, routename,callback = () => { }) {\n        if (!mediaList.length) {\n            return Promise.reject('No media to upload');\n        }\n        if (!validMediaType(mediaList)) {\n            return Promise.reject('Media must be image or video');\n        }\n\n        let url = this.defaultFolder + this.resourcesFolder;\n\n        let buildPath = '';\n        Array.from(mediaList).forEach(file => {\n            buildPath = url + routename + \"@\" + file.name ;\n            this.storeFile(buildPath,file, callback);\n        });\n    }\n\n    async findAllGroups(){\n        let url = this.addressBook;\n        var groups = [];\n        if (await fc.itemExists(url)) {\n            try {\n                let contents = await fc.readFolder(url);\n                let files = contents.files;\n\n                for (let i = 0; i < files.length; i++) {\n                    // let fileContent = await fc.readFile(files[i].url);\n                    // groups.push(groupsParser.parse(fileContent));\n                    //groups.push(groupsParser.parse(files[i].url));\n                    groups.push(parseGroups.parse(files[i].url));\n                }\n\n            } catch (error) {\n                // console.log(\"##### ERROR #####\");\n                // console.log(error);         // A full error response \n                // console.log(error.status);  // Just the status code of the error\n                // console.log(error.message); // Just the status code and statusText\n            }\n        } else {\n            console.log(\"There is no address-book directory\");\n        }\n    }\n\n    async findAllRoutes() {\n        let url = this.defaultFolder + this.routesFolder;\n\n        var routes = [];\n        \n        if (await fc.itemExists(url)) {\n            try {\n                let contents = await fc.readFolder(url);\n                let files = contents.files;\n\n                for (let i = 0; i < files.length; i++) {\n                    let fileContent = await fc.readFile(files[i].url);\n                    routes.push(parser.parse(fileContent));\n                }\n\n            } catch (error) {\n                // console.log(\"##### ERROR #####\");\n                // console.log(error);         // A full error response \n                // console.log(error.status);  // Just the status code of the error\n                // console.log(error.message); // Just the status code and statusText\n            }\n        } else {\n            console.log(\"There is no routes directory\");\n        }\n\n        // console.log(\"RUTAS\");\n        // console.log(routes);\n\n        return routes;\n    }\n}\n\n    const mediaType = {\n        image: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n        video: /\\.(mp4|webm|ogg)$/i\n    }\n\n    function validMediaType(mediaList) {\n        let valid = true;\n\n        mediaList.forEach(file => {\n            if (!(mediaType.image.test(file.name) || mediaType.video.test(file.name))) {\n                valid = false;\n            }\n        });\n\n        return valid;\n    }\n\n\n\nexport default PodHandler;","import auth from 'solid-auth-client';\nimport PodHandler from './PodHandler';\n\nexport async function uploadMedia(media, routename) {\n    let session = await auth.currentSession();\n    let storageHandler = new PodHandler(session);\n    await storageHandler.storeMedia(media, routename,(urlInPod, response) => {\n        let alertText = \"\";\n        if (urlInPod === null) {\n            alertText = \"ERROR UPLOADING MEDIA\"; // error\n        } else {\n            alertText = \"SUCCESS UPLOADING MEDIA\"; // success\n        }\n        alert(alertText);\n    });\n}\n\nexport async function uploadRoute(route, callback) {\n    let session = await auth.currentSession();\n    let storageHandler = new PodHandler(session);\n    let fileName = route.getName() + \"@\" + route.getId() + \".jsonld\";\n    let media = route.getMedia();\n\n    if(media.length){\n        uploadMedia(media, route.getName());\n    }\n    // let successCode = -1; // -1 if error. 0 otherwise.\n    storageHandler.storeRoute(fileName, route.getJsonLD(), (status) => {\n        callback(status);\n    });\n}\n\nexport async function loadAllRoutes() {\n    let session = await auth.currentSession();\n    let storageHandler = new PodHandler(session);\n\n    let loadedRoutes = storageHandler.findAllRoutes();\n    return loadedRoutes;\n}","import { loadAllRoutes } from '../parser/RouteHandler';\n\nexport default {\n    routes: [],\n    selected: \"\",\n    addRouteToCache(route) {\n        if(route && !this.routes.find((obj) => route.name === obj.name)) {\n            this.routes.push(route);\n            // console.log(\"ROUTE ADDED TO CACHE\");\n        } else {\n            alert(\"ERROR TRYING TO ADDROUTE TO CACHE\");\n        }\n    }, \n    async getRoutesFromPod() {\n        if (this.routes.length === 0) {\n            this.routes = await loadAllRoutes();\n            // console.log(\"ROUTES FROM POD (CACHE)\");\n            // console.log(this.routes);\n        }\n        return this.routes;\n    },\n    getRoutesFromCache() {\n        // console.log(\"ROUTES FROM CACHE\");\n        // console.log(this.routes);\n        this.getRoutesFromPod();\n        return this.routes;\n    },\n    clear() {\n        this.routes = [];\n        this.selected = null;\n    }\n};","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MyRouteCard from './MyRouteCard';\nimport { LoggedIn } from '@solid/react';\nimport cache from '../../cache/RoutesChache';\nimport {loadAllRoutes} from '../../parser/RouteHandler';\n\nexport class ListUserRoutes extends Component {\n  constructor() {\n    super();\n    this.state = { \n      routes: cache.getRoutesFromCache(),\n    };\n  }\n\n  sizeFunction() {\n    let size = [];\n    for (let index = 0; index < 5; index++) {\n      size.push(1);\n    }\n  }\n\n  render() {\n    const { routes } = this.state;\n\n    return (\n      <Grid container style={{ flexGrow: 1 }} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n        { routes.map(each => (\n          <Grid item>\n          <LoggedIn>\n            <MyRouteCard route={each} />\n          </LoggedIn>\n        </Grid>\n        ))}\n        </Grid>\n      </Grid>\n    </Grid>\n    )\n  }\n}\n\nexport default ListUserRoutes;","import React from \"react\";\nimport NavBar from '../../graphic interface/NavBar.js';\nimport ListUserRoutes from '../../graphic interface/ListUserRoutes.js';\n\nconst UserRoutes = () => {\n  return (\n    <div>\n      <div>\n        <NavBar />\n      </div>\n      <div>\n        <ListUserRoutes />\n      </div>\n    </div>\n  );\n};\n\nexport default UserRoutes;","import React, { Component } from 'react';\nimport { render } from \"react-dom\";\nimport { VictoryScatter, VictoryPortal, VictoryArea, VictoryStack, VictoryGroup, VictoryChart} from \"victory\";\nimport { Container } from '@material-ui/core';\n\nfunction getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2-lat1);  // deg2rad below\n    var dLon = deg2rad(lon2-lon1); \n    var a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n      Math.sin(dLon/2) * Math.sin(dLon/2)\n      ; \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c; // Distance in km\n    return d;\n  }\n  \nfunction deg2rad(deg) {\n    return deg * (Math.PI/180)\n  }\nfunction getArrayDistances(routeElements) {\n    let total = 0;\n    let aux = [];\n    aux.push(total);\n  \n    for (let i = 1; i < routeElements.length; i++) {\n        total = total + getDistanceFromLatLonInKm(routeElements[i-1].getLatitude(),routeElements[i-1].getLongitude(),\n          routeElements[i].getLatitude(),routeElements[i].getLongitude());\n          aux.push(total);\n    }\n  \n    return aux;\n  }\n\nfunction getChartData(routeElements){\n    let aux = getArrayDistances(routeElements);\n    let data=[];\n    for (let i = 0; i < routeElements.length; i++) {\n        if(routeElements[i].getElevation()==null){\n            data.push({x: aux[i], y: 0});\n        }\n        else{\n            data.push({x: aux[i], y: routeElements[i].getElevation()});\n        }\n    }\n  \n    return data;\n  }\n\nfunction isShown(routeElements){\n  for (let i = 0; i < routeElements.length; i++) {\n    if(routeElements[i].y!=0){\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default class ElevationGraph extends Component {\n    data = getChartData(this.props.data);\n    show = isShown(this.data);\n    render(){\n        return (\n          <Container data-testid=\"chart\" >\n            {this.show&&\n            <VictoryChart height={\"200\"}>\n              <VictoryStack animate={{\n                        duration: 2000,\n                        onLoad: { duration: 1000 }\n                        }} \n                        colorScale={[\"1FB494\"]}>\n                <VictoryGroup\n                  data = {this.data}\n                >\n                  <VictoryArea/>\n                  <VictoryPortal>\n                    <VictoryScatter\n                      style={{ data: { fill: \"black\" } }}\n                    />\n                  </VictoryPortal>\n                </VictoryGroup>\n              </VictoryStack>\n            </VictoryChart>}\n          </Container>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\n\nexport default class DetailsMap extends Component {\n  points = this.props.route.getRouteElements().map(point => (\n    [point.getLatitude(), point.getLongitude()]\n  ));\n\n  setPopup = () => { }\n\n  render() {\n    return (\n      <Map id=\"map\" bounds={this.points} zoom={16} height={5}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={this.points} color='blue' />\n\n        {this.props.route.getRouteElements().map((point) => (\n          <Marker position={[point.getLatitude(), point.getLongitude()]}>\n            <Popup>\n              <p>{point.getName()}</p>\n              <p>Latitude: {point.getLatitude()}</p>\n              <p>Longitude: {point.getLongitude()}</p>\n              <p>Elevation: {point.getElevation()}</p>\n            </Popup>\n          </Marker>\n        ))}\n      </Map>\n    )\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function CommentsCard(props) {\n    const classes = useStyles();\n\n    return (\n        <GridList className={classes.gridList} cols={1}>\n            {props.route.getComments().map((comment) => (\n            <Card>\n                <CardContent>\n                    <Typography>\n                        {comment}\n                    </Typography>\n                </CardContent>\n            </Card>\n            ))}\n        </GridList>\n    );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1,\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 255,\n    display: 'block',\n    maxWidth: 400,\n    overflow: 'hidden',\n    width: '100%',\n  },\n}));\n\nexport default function ImgCarrusel(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = props.media.length;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  if (maxSteps == 0){\n    return (\n        <div className={classes.root}>\n            <Paper square elevation={0} className={classes.header}>\n                <Typography>No media to be shown</Typography>\n            </Paper>\n        </div>\n    );\n  }\n  else{\n      return (\n        <div className={classes.root}>\n        <Paper square elevation={0} className={classes.header}>\n            <Typography>{props.media[activeStep].name}</Typography>\n        </Paper>\n        <AutoPlaySwipeableViews\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={activeStep}\n            onChangeIndex={handleStepChange}\n            enableMouseEvents\n        >\n            {props.media.map((step, index) => (\n            <div key={step.name}>\n                {Math.abs(activeStep - index) <= 2 ? (\n                <img className={classes.img} src={step.id} alt={step.name} />\n                ) : null}\n            </div>\n            ))}\n        </AutoPlaySwipeableViews>\n        <MobileStepper\n            steps={maxSteps}\n            position=\"static\"\n            variant=\"text\"\n            activeStep={activeStep}\n            nextButton={\n            <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                Next\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </Button>\n            }\n            backButton={\n            <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                Back\n            </Button>\n            }\n        />\n        </div>\n    );\n  }\n\n  \n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport CommentsCard from \"./CommentsCard\";\nimport ImgCarrusel from \"./ImgCarrusel\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function MediaTabBar(props) {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n      };\n\n    return (\n        <div>\n            <AppBar position=\"static\" >\n                <Tabs value={value} onChange={handleChange} >\n                    <Tab data-testid=\"comms\" label=\"Comments\" />\n                    <Tab data-testid=\"media\" label=\"Media\" />\n                </Tabs>\n            </AppBar>\n            <Typography component=\"div\" role=\"tabpanel\" hidden={value !== 0}>\n                <CommentsCard route={props.route}></CommentsCard>\n            </Typography>\n            <Typography component=\"div\" role=\"tabpanel\" hidden={value !== 1}>\n                <ImgCarrusel media = {props.route.getMedia()}></ImgCarrusel>\n            </Typography>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport ElevationGraph from \"./ElevationGraph\"\nimport DetailsMap from '../map/DetailsMap.js';\nimport MediaTabBar from \"./MediaTabBar\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function RouteDetails(props) {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n      };\n\n      console.log(props.route);\n\n    return (\n        <div>\n            <Grid container className={classes.root} spacing={2}  direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Grid  item container className={classes.root} xs={10} spacing={2}  direction=\"column\" justify=\"center\" alignItems=\"center\">\n                    <Grid  item container className={classes.root} spacing={2} direction=\"column\" justify=\"center\" alignItems=\"center\">\n                        <Grid item xs={12} className={classes.root}>\n                            <Typography data-testid=\"name\" variant=\"h4\">\n                                {props.route.getName()}\n                            </Typography>\n                        </Grid>\n                        <Grid item container className={classes.root} spacing={3} xs={12}>\n                            <Grid item xs={8} >\n                                <Grid container className={classes.root} spacing={1} direction=\"column\" >\n                                    <Grid item>\n                                        <DetailsMap data-testid=\"map\" route={props.route}></DetailsMap>\n                                    </Grid>\n                                    <Grid item xs={9}>\n                                        <ElevationGraph  data ={props.route.getRouteElements()}></ElevationGraph>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Card elevation={5} className={classes.root}>\n                                    <CardContent>\n                                        <Grid item container className={classes.root} spacing={2} direction=\"column\" >\n                                            {props.route.getDate().toDateString()!=\"Invalid Date\"&&\n                                            <Grid item>\n                                                <Typography className={classes.pos} data-testid=\"date\">\n                                                    Date: {props.route.getDate().toDateString()}\n                                                </Typography>\n                                            </Grid>}\n                                            <Grid item container spacing={1}>\n                                                <Grid item xs={6} data-testid=\"dtc\">\n                                                    Distance: {Math.round(props.route.getTotalDistance()*1000)/1000} Km\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography className={classes.pos} data-testid=\"description\" >\n                                                    Description: {props.route.getDescription()}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MediaTabBar route={props.route} ></MediaTabBar>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n\n","import React from \"react\";\nimport NavBar from '../../graphic interface/NavBar.js';\nimport { useParams } from \"react-router-dom\";\nimport RouteDetailsCard from \"../../graphic interface/RouteDetailsCard.js\";\nimport cache from '../../../cache/RoutesChache';\n\nconst RouteDetails = () => {\n  let { id } = useParams();\n\n  let myroute=cache.getRoutesFromCache().filter((r) => (r.getId() === id));\n\n  return (\n    <div>\n      <div>\n        <NavBar />\n      </div>\n      <div>\n        { <RouteDetailsCard route={myroute[0]} ></RouteDetailsCard> }\n      </div>\n    </div>\n  );\n};\n\nexport default RouteDetails;","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\nexport class DataForm extends Component {\n\n    handleDateChange = (date) => {\n        this.props.handleDateChange(date);\n    };\n\n    next = (e) => {\n        e.preventDefault();\n        this.props.handleNext();\n    }\n\n    handleMediaChange = (selectorFiles: FileList, code) => {\n        this.props.handleMediaChange(selectorFiles, code);\n    }\n\n    render() {\n\n        const { values, handleChange } = this.props;\n\n        return (\n            <React.Fragment>\n                <Typography variant=\"h6\" gutterBottom>\n                    Please, introduce the following data for your new route\n                </Typography>\n                <form onSubmit={this.next}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6} style={{ marginTop: 16 }}>\n                            <TextField\n                                required\n                                id=\"name\"\n                                name=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                                defaultValue={values.name}\n                                autoComplete=\"routename\"\n                                onChange={handleChange('name')}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <KeyboardDatePicker\n                                    disableToolbar\n                                    required\n                                    variant=\"inline\"\n                                    id=\"date\"\n                                    name=\"date\"\n                                    format=\"dd/MM/yyyy\"\n                                    margin=\"normal\"\n                                    label=\"Date\"\n                                    data-testid=\"date\"\n                                    value={values.date}\n                                    onChange={this.handleDateChange}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'date',\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"description\"\n                                name=\"description\"\n                                label=\"Description\"\n                                data-testid=\"descr\"\n                                multiline\n                                fullWidth\n                                defaultValue={values.description}\n                                rows=\"4\"\n                                variant=\"outlined\"\n                                onChange={handleChange('description')}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={3} >\n                            <input\n                                accept=\"image/*\"\n                                style={{ display: 'none' }}\n                                id=\"media-photo\"\n                                multiple\n                                defaultValue={values.photos}\n                                type=\"file\"\n                                onChange={(e) => this.handleMediaChange(e.target.files, 0)} //photos\n                            />\n                            <label htmlFor=\"media-photo\">\n                                <Button variant=\"contained\" color=\"default\" component=\"span\" startIcon={<AddAPhotoIcon />}>\n                                    Photos\n                            </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12} sm={6} >\n                            <input\n                                accept=\"video/*\"\n                                style={{ display: 'none' }}\n                                id=\"media-video\"\n                                multiple\n                                defaultValue={values.videos}\n                                type=\"file\"\n                                onChange={(e) => this.handleMediaChange(e.target.files, 1)} //videos\n                            />\n                            <label htmlFor=\"media-video\">\n                                <Button variant=\"contained\" color=\"default\" component=\"span\" startIcon={<CloudUploadIcon />}>\n                                    Videos\n                            </Button>\n                            </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormHelperText id=\"my-helper-text\">Fields marked with (*) are mandatory.</FormHelperText>\n                        </Grid>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: 'auto'\n                            }}\n                            type=\"submit\"\n                        >\n                            Next\n                        </Button>\n                    </Grid>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DataForm;\n","import React, { Component } from 'react';\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\n\nexport class ReviewForm extends Component {\n\n    next = (e) => {\n        e.preventDefault();\n        this.props.createRoute();\n        this.props.handleNext();\n    }\n\n    back = (e) => {\n        e.preventDefault();\n        this.props.handleBack();\n    }\n\n    getPointsText(points){\n        var pointsText = \"\";\n\n        points.forEach((p) => pointsText += \"Lat: \"+p.lat+\"\\tLong: \"+p.lng+\"\\n\");\n\n        return pointsText;\n    }\n\n    render() {\n\n        const { values } = this.props;\n\n        var month = values.date.getUTCMonth() + 1; //months from 1-12\n        var day = values.date.getUTCDate();\n        var year = values.date.getUTCFullYear();\n\n        const date = month + \"/\" + day + \"/\" + year;        \n\n        return (\n            <div>\n                <React.Fragment>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Please, review all the data\n                    </Typography>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6} style={{ marginTop: 16 }}>\n                            <TextField\n                                disabled\n                                id=\"name\"\n                                name=\"name\"\n                                label=\"Name\"\n                                data-testid=\"name\"\n                                fullWidth\n                                defaultValue={values.name}\n                                variant=\"filled\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} style={{ marginTop: 16 }}>\n                            <TextField\n                                disabled\n                                id=\"date\"\n                                name=\"date\"\n                                label=\"Date\"\n                                data-testid=\"date\"\n                                fullWidth\n                                defaultValue={date}\n                                variant=\"filled\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                disabled\n                                id=\"description\"\n                                name=\"description\"\n                                label=\"Description\"\n                                data-testid=\"description\"\n                                multiline\n                                fullWidth\n                                defaultValue={values.description}\n                                rows=\"4\"\n                                variant=\"filled\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                disabled\n                                id=\"mapPoint\"\n                                name=\"mapPoint\"\n                                label=\"Track Points\"\n                                data-testid=\"trackPoints\"\n                                multiline\n                                fullWidth\n                                defaultValue={this.getPointsText(values.points)}\n                                rows=\"4\"\n                                variant=\"filled\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={3} style={{ marginTop: 12 }}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: '1vh'\n                            }}\n                            onClick={this.back}\n                        >\n                            Back\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: 'auto'\n                            }}\n                            onClick={this.next}\n                        >\n                            Next\n                        </Button>\n                    </Grid>\n                </React.Fragment>\n            </div>\n        );\n    }\n}\n\nexport default ReviewForm;\n","import React, { Component } from 'react';\nimport { Map, Polyline, TileLayer, Marker } from 'react-leaflet';\nimport ReactLeafletSearch from 'react-leaflet-search';\n\nexport class EditableMap extends Component {\n\n    constructor() {\n\t\tsuper();\n        this.state = { points: [] };\n        this.firstPoint = true;\n        \n\t}\n\n    addPoint = (e) => {\n\t\tthis.state.points.push(e.latlng);\n        this.setState({ points: this.state.points.slice() });\n        \n        if(this.firstPoint === true) {\n            this.props.openNotif(\"You can move a point by dragging it and delete it just clicking on it\", 'info');\n            this.firstPoint = false;\n        }\n    }\n\n    updatePoint = (event) => {\n\t\tvar id = event.target.options.marker_index;\n\t\tvar position = event.target.getLatLng();\n\t\tconst { points } = this.state;\n\n\t\tpoints[id] = position;\n\t\tthis.setState({ points: points.slice() });\n\t}\n\n\tremovePoint = (event) => {\n        var id = event.target.options.marker_index;\n        const { points } = this.state;\n        points.splice(id, 1);\n        this.setState({ points: points.slice() });\n\n\t}\n    \n    getTrackPoints() {\n        return this.state.points.slice();\n    }\n\n    render() {\n        const position = [43.3619145, -5.8493887];\n\n        return (\n            <React.Fragment>\n                <Map\n                    center={position}\n                    zoom={12}\n                    style={{ width: \"52vh\", height: \"40vh\" }}\n                    onClick={this.addPoint}\n                >\n                    <TileLayer\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n\n                    <Polyline positions={this.state.points} color='orange' />\n\n                    {this.state.points.map((position, index) =>\n                        <Marker\n                            marker_index={index}\n                            position={position}\n                            draggable={true}\n                            ondrag={this.updatePoint}\n                            onclick={this.removePoint}\n                        >\n                        </Marker>\n                    )}\n\n                    <ReactLeafletSearch \n                        position=\"topleft\"\n                        provider=\"OpenStreetMap\"\n                    />\n                </Map>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default EditableMap;\n","import React, { Component } from 'react';\nimport EditableMap from '../../../map/EditableMap';\nimport { Button, Typography, Grid, Snackbar, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport class MapForm extends Component {\n\n    constructor() {\n        super();\n        this.points = React.createRef();\n        this.state = {\n            open: false,\n            message: \"\",\n            severity: '',\n            vertical: 'top',\n            horizontal: 'center',\n        };\n    }\n\n    next = (e) => {\n        e.preventDefault();\n        if (this.points.current.getTrackPoints() === 'undefined' || this.points.current.getTrackPoints().length === 0) {\n            this.openNotif(\"You must select at least one track point!!\", 'warning');\n            return;\n        }\n        this.props.handleNext();\n        this.props.handleMapPoints(this.points.current.getTrackPoints());\n    }\n\n    back = (e) => {\n        e.preventDefault();\n        this.props.handleBack();\n    }\n\n    openNotif = (text, newSeverity) => {\n        this.setState({\n            open: true,\n            message: text,\n            severity: newSeverity\n        });\n    };\n\n    closeNotif = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { open, message, severity } = this.state;\n        const { vertical, horizontal } = this.state;\n\n        return (\n            <React.Fragment>\n                <Snackbar\n                    anchorOrigin={{ vertical, horizontal }}\n                    open={open}\n                    action={\n                        <React.Fragment>\n                            <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                onClick={this.closeNotif}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                >\n                    <Alert onClose={this.closeNotif} severity={severity}>\n                        {message}\n                    </Alert>\n                </Snackbar>\n\n                <Typography variant=\"h6\" gutterBottom data-testid=\"addPtsMsg\">\n                    Click on the map to add trackpoints to your route\n                </Typography>\n\n                <form onSubmit={this.next}>\n                    <EditableMap ref={this.points} openNotif={this.openNotif}/>\n\n                    <Grid container spacing={3} style={{ marginTop: 12 }}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: '1vh'\n                            }}\n                            type=\"submit\"\n                            onClick={this.back}\n                        >\n                            Back\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginTop: 12,\n                                marginLeft: 'auto'\n                            }}\n                            type=\"submit\"\n                        >\n                            Next\n                        </Button>\n                    </Grid>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default MapForm;\n\n","import React, { Component } from 'react';\nimport { Grid, IconButton, Tooltip } from '@material-ui/core';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport Typography from '@material-ui/core/Typography';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nexport class SuccessForm extends Component {\n\n    download = (e) => {\n        e.preventDefault();\n        this.props.handleDownload();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={12} sm={2}>\n                        <DirectionsWalkIcon fontSize=\"large\" style={{\n                            fill: \"orange\", width: 65,\n                            height: 65,\n                        }} data-testid=\"icon\"/>\n                    </Grid>\n                    <Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Typography variant=\"h5\" data-testid=\"textCreated\" gutterBottom>\n                                Route created\n                        </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"subtitle1\" data-testid=\"textSuccessful\">\n                                Your new track was succesfully created and saved\n                        </Typography>\n                        </Grid>\n                    </Grid>\n                    <Tooltip title=\"Download\" arrow>\n                        <IconButton\n                            data-testid=\"download\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{\n                                marginLeft: 'auto',\n                                // marginRight: '2vh'\n                            }}\n                            onClick={this.download}\n                        >\n                            <GetAppIcon fontSize=\"large\" style={{ fill: \"orange\" }} />\n                        </IconButton>\n                    </Tooltip>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SuccessForm;","import React, { Component } from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport DataForm from '../stepper/dataform/DataForm';\nimport ReviewForm from '../stepper/reviewform/ReviewForm';\nimport MapForm from '../stepper/mapform/MapForm';\nimport NavBar from '../../graphic interface/NavBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport FilterHdrIcon from '@material-ui/icons/FilterHdr';\nimport SuccessForm from '../stepper/success/SuccessForm';\nimport { withStyles } from '@material-ui/core/styles';\nimport Route from '../../../entities/Route';\nimport { uploadRoute } from '../../../parser/RouteHandler';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Snackbar, IconButton } from '@material-ui/core';\nimport cache from '../../../cache/RoutesChache';\n\nexport class NewRouteForm extends Component {\n\n    constructor() {\n\n        super();\n        this.route = null;\n\n        this.state = {\n            open: false,\n            message: '',\n            vertical: 'top',\n            horizontal: 'center',\n            severity: '', // success, error, warning, info\n            // ----  route ----\n            activeStep: 0,\n            name: '',\n            description: '',\n            date: new Date(),\n            photos: [],\n            videos: [],\n            points: []\n        };\n    }\n\n    handleNext = () => {\n        const { activeStep } = this.state;\n        this.setState({ activeStep: activeStep + 1 });\n    };\n\n    handleBack = () => {\n        const { activeStep } = this.state;\n        this.setState({ activeStep: activeStep - 1 });\n    };\n\n    handleChange = (input) => (e) => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    handleDateChange = (newDate) => {\n        this.setState({ date: newDate });\n    }\n\n    handleMediaChange = (selectorFiles: FileList, code) => { // this is not an error, is TypeScript\n        switch (code) {\n            case 0: // photos\n                this.setState({ photos: selectorFiles });\n                break;\n            case 1: // videos\n                this.setState({ videos: selectorFiles });\n                break;\n            default:\n                alert('Invalid media code!! ' + code);\n                break;\n        }\n    }\n\n    handleMapPoints = (newPoints) => {\n        this.setState({ points: newPoints });\n    }\n\n\n    // ###########################\n    //        Notification\n    // ###########################\n\n    openNotif = (text, newSeverity) => {\n        this.setState({\n            open: true,\n            message: text,\n            severity: newSeverity\n        });\n    };\n\n    closeNotif = () => {\n        this.setState({ open: false });\n    };\n\n\n    // ###########################\n    // Download and Upload methods\n    // ###########################\n\n    handleDownload = () => {\n        const fileData = this.route.getJsonLD();\n        const blob = new Blob([fileData], { type: \"text/plain\" });\n\t\tconst url = URL.createObjectURL(blob);\n\t\tconst link = document.createElement('a');\n\t\tlink.download = this.route.getName() + \".json\";\n\t\tlink.href = url;\n\t\tlink.click();\n    }\n\n    upload(route) {\n        cache.addRouteToCache(route);\n        return new Promise((resolve) => {\n            uploadRoute(route, (response) => resolve(response));\n        });\n    }\n\n    createRoute = () => {\n        const { name, description, date, photos, videos, points } = this.state;\n        let comments = null;\n        let media = [];\n\n        Array.from(photos).forEach((p) => media.push(p));\n        Array.from(videos).forEach((p) => media.push(p));\n\n        this.route = new Route(name, description, points, comments, media, date);\n\n        let statusPromise = this.upload(this.route);\n        statusPromise.then((status) => this.checkSuccessCode(status));\n    }\n\n    checkSuccessCode(code) {\n        switch (code) {\n            case -1: // error\n                this.openNotif(\"There was an error during this operation\", 'error');\n                break;\n            case 0: // success\n                this.openNotif(\"Your route was successfully saved\", 'success');\n                break;\n            default:\n                throw new Error('Unknown Success Code ' + code);\n        }\n    }\n\n    render() {\n\n        const { activeStep } = this.state;\n        const { name, description, date, photos, videos, points } = this.state;\n        const values = { activeStep, name, description, date, photos, videos, points };\n\n        const { classes } = this.props;\n\n        const { open, message, severity } = this.state;\n        const { vertical, horizontal } = this.state;\n\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <NavBar />\n                    <Snackbar\n                        anchorOrigin={{ vertical, horizontal }}\n                        open={open}\n                        action={\n                            <React.Fragment>\n                                <IconButton\n                                    aria-label=\"close\"\n                                    color=\"inherit\"\n                                    onClick={this.closeNotif}\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </React.Fragment>\n                        }\n                    >\n                        <Alert onClose={this.closeNotif} severity={severity}>\n                            {message}\n                        </Alert>\n                    </Snackbar>\n\n                    <main className={classes.layout}>\n                        <Paper className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <FilterHdrIcon fontSize=\"large\" />\n                            </Avatar>\n\n                            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                                Create your own route\n                            </Typography>\n\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\n                                {steps.map((label) => (\n                                    <Step key={label}>\n                                        <StepLabel>{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n\n                            <React.Fragment>\n                                {getStepContent(activeStep,\n                                    values,\n                                    this.handleNext,\n                                    this.handleBack,\n                                    this.handleChange,\n                                    this.handleDateChange,\n                                    this.handleMediaChange,\n                                    this.handleMapPoints,\n                                    this.handleDownload,\n                                    this.createRoute\n                                )}\n                            </React.Fragment>\n                        </Paper>\n                    </main>\n                </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nconst steps = ['Basic data', 'Map', 'Review your route'];\n\nfunction getStepContent(step,\n    values,\n    handleNext,\n    handleBack,\n    handleChange,\n    handleDateChange,\n    handleMediaChange,\n    handleMapPoints,\n    handleDownload,\n    createRoute) {\n    switch (step) {\n        case 0:\n            return <DataForm\n                handleNext={handleNext}\n                handleChange={handleChange}\n                handleDateChange={handleDateChange}\n                handleMediaChange={handleMediaChange}\n                values={values}\n            />;\n        case 1:\n            return <MapForm\n                handleNext={handleNext}\n                handleBack={handleBack}\n                handleMapPoints={handleMapPoints}\n                values={values}\n            />;\n        case 2:\n            return <ReviewForm\n                handleNext={handleNext}\n                handleBack={handleBack}\n                values={values}\n                createRoute={createRoute}\n            />;\n        case 3:\n            return <SuccessForm\n                handleDownload={handleDownload}\n            />;\n        default:\n            throw new Error('Unknown step ' + step);\n    }\n}\n\n\nconst useStyles = (theme) => ({\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        width: 65,\n        height: 65,\n    },\n    grid: {\n        marginLeft: theme.spacing(2),\n    }\n});\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default withStyles(useStyles)(NewRouteForm);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { List } from '@solid/react';\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      margin: 50,\n    },\n    pos: {\n      marginBottom: 12,\n      align: \"left\",\n    },\n  });\n\nexport default function FriendsManagement() {\n    const classes = useStyles();\n\n    const childrenTrimmed = (item, index) =>\n    <Typography className={classes.pos} color=\"textSecondary\"\n      align = \"left\" key={index}>\n        <a href = {item}>\n            {`${item}`.split('.')[0].split('//')[1]}\n        </a>\n    </Typography>;\n  \n    return (\n      <Card elevation={5} className={classes.root}>\n          <CardContent>\n        <Typography data-testid=\"title\" variant=\"h5\" component=\"h2\">\n          Friends\n        </Typography>\n        <List data-testid=\"friends\" src = \"user.friends\"\n            children = {childrenTrimmed} >\n        </List>\n      </CardContent>\n        <CardActions>\n            <Button data-testid=\"add\" size=\"small\">Add friend</Button>\n        </CardActions>\n      </Card>\n    );\n  }","import React, { Component } from 'react';\n//import Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\n//import FormLabel from '@material-ui/core/FormLabel';\n//import FormControl from '@material-ui/core/FormControl';\n//import FormGroup from '@material-ui/core/FormGroup';\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\n//import { podHandler } from '../../../parser/PodHandler';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport NavBar from '../../graphic interface/NavBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport GroupOfFriends from '../../../entities/GroupOfFriends.js';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n//import ListItemIcon from '@material-ui/core/ListItemIcon';\n//import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n//import IconButton from '@material-ui/core/IconButton';\n//import CommentIcon from '@material-ui/icons/Comment';\n\nimport FriendsCard from '../../graphic interface/FriendsCard'\n\nexport class CreateGroupForm extends Component{\n\n    constructor(){\n        super();\n        this.group = null;\n        this.state = {\n            name : '',\n            friends : []\n        };\n    }\n\n    useStyles = makeStyles((theme) => ({\n        root: {\n          display: 'flex',\n        },\n        formControl: {\n          margin: theme.spacing(3),\n        },\n      }));\n\n    changeName = (event) => {\n\n        this.setState({name : event.target.value});\n\n    }\n\n    makeGroup = () => {         \n\n            let name = this.state.name;\n            let friends = this.state.friends;\n            //let group = new GroupOfFriends(name, friends);\n            //this.storeGroup(group);\n            new GroupOfFriends(name, friends).storeInPod();\n\n    };\n\n   // storeGroup = (group) => {\n\n    //    podHandler.storeGroup(group)\n\n   // }\n\n   childrenTrimmed = (item) =>        \n\n        <List\n            \n            label = {`${item}`.split('.')[0].split('//')[1]}\n            onClick={this.state.friends.push(item)}\n        />;\n        \n\n    showFriends = (friend) =>\n        <ListItem role={undefined} dense button onClick={console.log(\"clicked over friend\")}>\n            \n            <Checkbox\n                edge=\"start\"\n               \n                tabIndex={-1}\n                disableRipple\n                \n            />\n            <ListItemText primary={`${friend}`} />\n            \n        </ListItem>\n    ;\n\n\n    childrenTrimmed = (item, index) =>\n    <Typography className={useStyles().pos} color=\"textSecondary\"\n      align = \"left\" key={index}>\n        <a href = {item}>\n            {`${item}`.split('.')[0].split('//')[1]}\n        </a>\n    </Typography>;\n\n    render(){\n\n        const { classes } = this.props;\n\n        \n        /* const classes = this.useStyles();\n        const [checked, setChecked] = React.useState(false);\n\n        const changeFriends = (event) => {\n\n            setChecked(event.target.checked);\n            this.setState({friends : event.target.value}); \n            \n        } \n\n        const childrenTrimmed = (item) =>        \n\n            <Checkbox\n                checked={checked}\n                value = {this.state.friends}\n                label = {`${item}`.split('.')[0].split('//')[1]}\n                onChange={changeFriends}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n            />; */\n\n        \n\n        return(\n\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <NavBar />\n                    <main className={classes.layout}>\n                        <Paper className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <SupervisedUserCircleIcon fontSize=\"large\" />\n                            </Avatar>\n\n                            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                                Create a new group of friends\n                            </Typography>\n                            \n                                                   \n                            <form className={classes.root} noValidate autoComplete=\"off\">\n                          \n                                <TextField required id=\"standard-required\" label=\"Name\" defaultValue=\"\" />\n                                   \n                                <List src=\"user.friends\">\n                                Pick a few friends!\n                                {this.childrenTrimmed}\n                                </List>\n\n                                <Button variant=\"contained\" size=\"medium\" color=\"primary\" onClick={/*this.makeGroup*/ console.log(\"group created click\")} className={classes.margin}>\n                                    Create\n                                </Button>\n\n                            </form>                            \n                           \n                        </Paper>\n                    </main>\n                </React.Fragment>\n            </MuiThemeProvider>\n\n            /*\n             <React.Fragment>\n                                {this.childrenTrimmed}\n                            </React.Fragment>\n                            \n            /* <React.Fragment>\n                <h2>\n                    Create a new group of friends\n                </h2>\n                <form>\n                    <label>\n                        Name: \n                        <input type=\"text\" value={this.state.name} onChange={this.changeName} />\n                    </label>\n                    <FormControl component=\"fieldset\" className={this.useStyles().formControl}>\n                        <FormLabel component=\"legend\">Friends in your POD</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                friends = {this.childrenTrimmed}\n                            />          \n                        </FormGroup>\n                    </FormControl>\n                </form>\n                <button onClick={this.makeGroup}>Create</button>\n            </React.Fragment> */\n        );\n    }\n\n}\n\nconst useStyles = (theme) => ({\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    avatar: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        width: 65,\n        height: 65,\n    },\n    grid: {\n        marginLeft: theme.spacing(2),\n    }\n});\n\n\nexport default withStyles(useStyles)(CreateGroupForm);","import React, { Fragment } from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Welcome  from \"./welcome/Welcome.js\";\nimport PageNotFound from \"./pagenotfound/PageNotFound.js\";\nimport Register from '../services/register/Register.js';\nimport UserRoutes from './routes/UserRoutes.js';\nimport RouteDetails from './routes/RouteDetails.js';\nimport NewRouteForm from \"./newrouteform/NewRouteForm.js\";\nimport CreateGroupForm from \"./createGroupOfFriends/CreateGroupForm.js\";\n\nconst Routes = () => (\n  <HashRouter>\n    <Fragment>\n      <Switch>\n        <Route exact path=\"/404\" component={PageNotFound} />\n        <Redirect exact from=\"/\" to=\"/welcome\" />\n        <Route exact path=\"/welcome\" component={Welcome} />\n        <Route exact path=\"/myroutes\" component={UserRoutes} />\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/newRoute\" component={NewRouteForm}/>\n        <Route exact path=\"/RouteDetails/:id\" component={RouteDetails}/>\n        <Route exact path=\"/seeFriends\" component={CreateGroupForm}/>\n        <Route exact path=\"/newGroup\" component={CreateGroupForm}/>\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Fragment>\n  </HashRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './components/containers/Routes.js';\nimport \"./App.css\";\nimport { Helmet } from 'react-helmet';\nimport cache from './cache/RoutesChache';\n\nasync function getRoutes(){\n  return await cache.getRoutesFromPod();\n}\n\nfunction App() {\n  getRoutes();\n  return (\n    <div>\n      <Helmet>\n        <title>{'Viade'}</title>\n      </Helmet>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport teal from '@material-ui/core/colors/teal';\n\nconst theme = createMuiTheme(\n    {\n        palette: {\n            primary: {//amber,\n                main: teal[700],\n            }\n        }\n    }\n);\n\nReactDOM.render(<MuiThemeProvider theme = {theme}><App /></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo1.fd8da136.svg\";"],"sourceRoot":""}